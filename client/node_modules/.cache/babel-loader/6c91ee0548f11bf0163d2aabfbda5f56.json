{"ast":null,"code":"var _jsxFileName = \"/home/biagio/programming/sideprojects/functional-keeper/src/components/MainPage.js\";\nimport React, { Component } from 'react';\nimport ToDo from './ToDo';\nimport Targets from './Targets';\nimport WeeklyTrack from './WeeklyTrack';\nimport Navbar from './Navbar';\nimport './MainPage.css';\nimport ToDoData from './ToDoData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todolist: [],\n      dailyTargets: {},\n      weeklyTrack: {}\n    };\n    this.fetchDailyTodo = this.fetchDailyTodo.bind(this);\n    this.fetchWeeklyTodo = this.fetchWeeklyTodo.bind(this);\n    this.getCurrentWeekNumber = this.getCurrentWeekNumber.bind(this);\n  }\n\n  componentDidMount() {\n    // Daily targets\n    let dailyToDos = this.fetchDailyTodo();\n    let targets, achieved, remaining;\n    targets = dailyToDos.length - 1;\n    achieved = dailyToDos.filter(x => x.done === true).length;\n    remaining = targets - achieved; // Weekly targets\n\n    let currentWeekNumber = this.getCurrentWeekNumber();\n    let weeklyTodo = this.fetchWeeklyTodo(currentWeekNumber);\n    this.setState({\n      todolist: dailyToDos,\n      dailyTargets: {\n        targets: targets,\n        achieved: achieved,\n        remaining: remaining\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      todolist: [],\n      dailyTargets: {}\n    });\n  }\n\n  fetchDailyTodo() {\n    let date, month, year;\n    const today = new Date();\n    date = today.getDate().toString();\n    month = (today.getMonth() + 1).toString();\n    year = today.getFullYear().toString();\n    const fullDate = `${date}/${month}/${year}`;\n    const toDoList = ToDoData.filter(date => date.added === fullDate);\n    toDoList.push({\n      displayAdd: true\n    });\n    return toDoList;\n  }\n\n  getCurrentWeekNumber() {\n    let currentDate, startDate, days;\n    currentDate = new Date();\n    startDate = new Date(currentDate.getFullYear(), 0, 1);\n    days = Math.floor((currentDate - startDate) / (24 * 60 * 60 * 1000));\n    return Math.floor(days / 7);\n  }\n\n  fetchWeeklyTodo(weekNumber) {\n    const toDoList = ToDoData.filter(date => date.weekNumber === weekNumber);\n    let day = 0;\n    let weeklyTodo = [];\n\n    while (day < 7) {\n      let toDos = {\n        planned: toDoList.filter(x => x.day === day).length,\n        done: toDoList.filter(x => x.day === day && x.done).length,\n        undone: toDoList.filter(x => x.day === day && x.done === false).length\n      };\n    }\n\n    console.log(weeklyTodo);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainpage-container\",\n        children: [/*#__PURE__*/_jsxDEV(ToDo, {\n          items: this.state.todolist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Targets, {\n          items: this.state.dailyTargets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(WeeklyTrack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"names":["React","Component","ToDo","Targets","WeeklyTrack","Navbar","ToDoData","MainPage","constructor","props","state","todolist","dailyTargets","weeklyTrack","fetchDailyTodo","bind","fetchWeeklyTodo","getCurrentWeekNumber","componentDidMount","dailyToDos","targets","achieved","remaining","length","filter","x","done","currentWeekNumber","weeklyTodo","setState","componentWillUnmount","date","month","year","today","Date","getDate","toString","getMonth","getFullYear","fullDate","toDoList","added","push","displayAdd","currentDate","startDate","days","Math","floor","weekNumber","day","toDos","planned","undone","console","log","render"],"sources":["/home/biagio/programming/sideprojects/functional-keeper/src/components/MainPage.js"],"sourcesContent":["import React, {Component} from 'react'\nimport ToDo from './ToDo'\nimport Targets from './Targets'\nimport WeeklyTrack from './WeeklyTrack'\nimport Navbar from './Navbar'\nimport './MainPage.css'\nimport ToDoData from './ToDoData'\n\nclass MainPage extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         todolist: [],\n         dailyTargets: {},\n         weeklyTrack: {}\n      };\n      this.fetchDailyTodo = this.fetchDailyTodo.bind(this);\n      this.fetchWeeklyTodo = this.fetchWeeklyTodo.bind(this);\n      this.getCurrentWeekNumber = this.getCurrentWeekNumber.bind(this);\n   }\n\n   componentDidMount() {\n      // Daily targets\n      let dailyToDos = this.fetchDailyTodo();\n      let targets, achieved, remaining;\n\n      targets = dailyToDos.length - 1;\n      achieved = dailyToDos.filter(x => x.done === true).length;\n      remaining = targets - achieved;\n\n      // Weekly targets\n      let currentWeekNumber = this.getCurrentWeekNumber();\n      let weeklyTodo = this.fetchWeeklyTodo(currentWeekNumber);\n\n      this.setState({\n         todolist: dailyToDos,\n         dailyTargets: {\n            targets: targets,\n            achieved: achieved,\n            remaining: remaining\n         }\n      });\n   }\n\n   componentWillUnmount() {\n      this.setState({\n         todolist: [],\n         dailyTargets: {}\n      });\n   }\n\n   fetchDailyTodo() {\n      let date, month, year;\n      const today = new Date();\n      \n      date = today.getDate().toString();\n      month = (today.getMonth() + 1).toString();\n      year = today.getFullYear().toString();\n\n      const fullDate = `${date}/${month}/${year}`\n      const toDoList = ToDoData.filter(date => date.added === fullDate);\n\n      toDoList.push({\n         displayAdd: true\n      })\n\n      return toDoList;\n   }\n\n   getCurrentWeekNumber() {\n      let currentDate, startDate, days;\n      currentDate = new Date();\n      startDate = new Date(currentDate.getFullYear(), 0, 1);\n      days = Math.floor((currentDate - startDate) / (24 * 60 * 60 * 1000));\n      return Math.floor(days / 7);\n   }\n\n   fetchWeeklyTodo(weekNumber) {\n      const toDoList = ToDoData.filter(date => date.weekNumber === weekNumber);\n      let day = 0;\n      let weeklyTodo = [];\n\n      while (day < 7){\n         let toDos =\n            { planned: toDoList.filter(x => x.day === day).length, \n              done: toDoList.filter(x => x.day === day && x.done).length,\n              undone: toDoList.filter(x => x.day === day && x.done === false).length}\n      }\n      \n      console.log(weeklyTodo);\n   }\n\n   render() {\n      return(\n         <React.Fragment>\n         <Navbar />\n            <div className=\"mainpage-container\">\n               <ToDo items={this.state.todolist}/>\n               <Targets items={this.state.dailyTargets}/>\n               <WeeklyTrack />\n            </div>\n         </React.Fragment>\n      )\n   }\n}\n\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}